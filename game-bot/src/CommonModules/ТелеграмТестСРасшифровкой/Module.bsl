
#Область ПрограммныйИнтерфейс

// Обработчик элемента очереди в режиме работы бота - Тест с расшифровкой
// 
// Параметры:
//  ДанныеЭлемента - Структура
//  Отправитель - СправочникСсылка.УчетныеЗаписиТелеграм
Процедура ПриОбработкеЭлементаОчереди(ДанныеЭлемента, Отправитель) Экспорт
	
	Если ДанныеЭлемента.Свойство("message") Тогда
		
		Сообщение = ДанныеЭлемента.message;
		
		Если Не Сообщение.Свойство("from") Тогда
			Возврат;
		КонецЕсли;
		
		Если Не Сообщение.Свойство("text") Тогда
			Возврат;
		КонецЕсли;

		Текст = Сообщение.text;
		
		СтатусОтправителя = СтатусОтправителя(Отправитель);
		
		Если Не ЗначениеЗаполнено(СтатусОтправителя.Статус) Или СтрНачинаетсяС(Текст, "/start") Тогда
			ОтправитьПриветствие(Отправитель);
		ИначеЕсли СтатусОтправителя.Статус = Перечисления.СтатусыТестаСРасшифровкой.Приветствие Тогда
			Если СтрНачинаетсяС(Текст, КомандаНачатьТест()) Тогда
				НачатьТест(Отправитель, СтатусОтправителя);
			Иначе
				ОтправитьПриветствие(Отправитель);
			КонецЕсли;
		ИначеЕсли СтатусОтправителя.Статус = Перечисления.СтатусыТестаСРасшифровкой.Вопрос Тогда
			ОбработатьОтветНаВопрос(Отправитель, Текст, СтатусОтправителя);
		ИначеЕсли СтатусОтправителя.Статус = Перечисления.СтатусыТестаСРасшифровкой.Завершено Тогда
			ТекстОтвета = НСтр("ru = 'Тест пройдет! Если хочешь пройти тест еще раз напиши ""/start""'");
			ИнтеграцияТелеграм.ОтправитьСообщение(Отправитель, ТекстОтвета);
		Иначе
			ВызватьИсключение НСтр("ru = 'Неизвестный статус отправителя'")
		КонецЕсли;
	
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

Процедура ОтправитьПриветствие(Отправитель)
	
	ТекстПриветствия = Константы.ПриветствиеТестаСРасшифровкой.Получить();
	
	Если ПустаяСтрока(ТекстПриветствия) Тогда
		ТекстПриветствия = НСтр(
			"ru = 'Для начала теста нажми на кнопку Начать тест! 
			|После ответа на все вопросы теста я напишу результат тестирования.'");
	КонецЕсли;
	
	ДополнительныеСвойства = ИнтеграцияТелеграм.ДополнительныеСвойстваИсходящегоСообщения();
	ДополнительныеСвойства.Клавиатура = КлавиатураОднаКнопка(КомандаНачатьТест());
	
	ИнтеграцияТелеграм.ОтправитьСообщение(Отправитель, ТекстПриветствия, ДополнительныеСвойства);
	
	УстановитьСтатус(Отправитель, Перечисления.СтатусыТестаСРасшифровкой.Приветствие);
	
КонецПроцедуры

Процедура НачатьТест(Отправитель, СтатусОтправителя)
	
	ДокОбъект = Документы.ПрохождениеТестаСРасшифровкой.СоздатьДокумент();
	ДокОбъект.Дата = ТекущаяДатаСеанса();
	ДокОбъект.УчетнаяЗапись = Отправитель;
	ДокОбъект.Заполнить(Неопределено);
	
	Если Не ЗначениеЗаполнено(ДокОбъект.Вопросы) Тогда
		ВызватьИсключение НСтр("ru = 'Для запуска теста должен быть настроен хотя бы один вопрос'")
	КонецЕсли;
	
	НачатьТранзакцию();
	
	Попытка
	
		ДокОбъект.Записать();
		
		ОтправитьВопрос(Отправитель, ДокОбъект.Вопросы[0].Вопрос);
		
		УстановитьСтатус(Отправитель, Перечисления.СтатусыТестаСРасшифровкой.Вопрос, 1, ДокОбъект.Ссылка);
		
		ЗафиксироватьТранзакцию();
		
	Исключение
		ОтменитьТранзакцию();
		ВызватьИсключение;
	КонецПопытки;
	
КонецПроцедуры

Процедура ОбработатьОтветНаВопрос(Отправитель, Текст, СтатусОтправителя)
	
	Если Не ЭтоЧисло(Текст) Тогда
		ТекстОтвета = НСтр("ru = 'Напиши номер ответа на вопрос'");
		ИнтеграцияТелеграм.ОтправитьСообщение(Отправитель, ТекстОтвета);
		Возврат;
	КонецЕсли;
	
	ДокОбъект = СтатусОтправителя.Прохождение.ПолучитьОбъект();
	
	СтрокаВопроса = ДокОбъект.Вопросы[СтатусОтправителя.НомерВопроса - 1];
	
	НомерОтвета = Число(Текст);
	
	БаллыОтвета = БаллыОтвета(СтрокаВопроса.Вопрос, НомерОтвета);
	
	Если БаллыОтвета = Неопределено Тогда
		ТекстОтвета = НСтр("ru = 'У этого вопроса нет ответа с таким номером'");
		ИнтеграцияТелеграм.ОтправитьСообщение(Отправитель, ТекстОтвета);
		Возврат;
	КонецЕсли;
	
	СтрокаВопроса.Ответ = НомерОтвета;
	СтрокаВопроса.Баллы = БаллыОтвета;
	
	НачатьТранзакцию();
	
	Попытка
	
		ДокОбъект.Записать();
		
		Если СтатусОтправителя.НомерВопроса < ДокОбъект.Вопросы.Количество() Тогда
			НомерВопроса = СтатусОтправителя.НомерВопроса + 1;
			ОтправитьВопрос(Отправитель, ДокОбъект.Вопросы[НомерВопроса - 1].Вопрос);
			Статус = Перечисления.СтатусыТестаСРасшифровкой.Вопрос;
			УстановитьСтатус(Отправитель, Статус, НомерВопроса, ДокОбъект.Ссылка);
		Иначе
			ОтправитьРезультат(Отправитель, ДокОбъект.Результат);
			УстановитьСтатус(Отправитель, Перечисления.СтатусыТестаСРасшифровкой.Завершено);
		КонецЕсли;
		
		ЗафиксироватьТранзакцию();
		
	Исключение
		ОтменитьТранзакцию();
		ВызватьИсключение;
	КонецПопытки;
	
КонецПроцедуры

Процедура ОтправитьРезультат(Отправитель, Результат)
	
	ТекстСообщения = КомментарийРезультата(Результат);
	
	ДополнительныеСвойства = ИнтеграцияТелеграм.ДополнительныеСвойстваИсходящегоСообщения();
	ДополнительныеСвойства.Клавиатура = УдалитьКлавиатуру();
	
	ИнтеграцияТелеграм.ОтправитьСообщение(Отправитель, ТекстСообщения, ДополнительныеСвойства);
	
	ОбщиеРекомендации = Константы.ОбщиеРекомендацииТестаСРасшифровкой.Получить();
	
	Если Не ПустаяСтрока(ОбщиеРекомендации) Тогда
		ИнтеграцияТелеграм.ОтправитьСообщение(Отправитель, ОбщиеРекомендации);
	КонецЕсли;
	
КонецПроцедуры

Функция УдалитьКлавиатуру()
	
	Клавиатура = Новый Структура;
	Клавиатура.Вставить("remove_keyboard", Истина);
	
	Возврат Клавиатура;
	
КонецФункции

Функция КомментарийРезультата(Результат)
	
	Запрос = Новый Запрос;
	Запрос.Текст =
		"ВЫБРАТЬ
		|	РасшифровкаТестаСРасшифровкой.Комментарий
		|ИЗ
		|	Справочник.РасшифровкиТестаСРасшифровкой КАК РасшифровкаТестаСРасшифровкой
		|ГДЕ
		|	РасшифровкаТестаСРасшифровкой.Ссылка = &Ссылка";
	
	Запрос.УстановитьПараметр("Ссылка", Результат);
	
	Выборка = Запрос.Выполнить().Выбрать();
	
	Выборка.Следующий();
	
	Возврат Выборка.Комментарий;
	
КонецФункции

Функция ЭтоЧисло(Текст)
	Возврат СтрПодобнаПоРегулярномуВыражению(Текст, "^\d+$");
КонецФункции

Функция БаллыОтвета(Вопрос, НомерОтвета)
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	ВопросТестаСРасшифровкойОтветы.Баллы
		|ИЗ
		|	Справочник.ВопросыТестаСРасшифровкой.Ответы КАК ВопросТестаСРасшифровкойОтветы
		|ГДЕ
		|	ВопросТестаСРасшифровкойОтветы.НомерСтроки = &НомерСтроки
		|	И ВопросТестаСРасшифровкойОтветы.Ссылка = &Ссылка";
		
	Запрос.УстановитьПараметр("НомерСтроки", НомерОтвета);
	Запрос.УстановитьПараметр("Ссылка", Вопрос);
	
	Выборка = Запрос.Выполнить().Выбрать();
	
	Если Выборка.Следующий() Тогда
		Возврат Выборка.Баллы;
	КонецЕсли;
	
	Возврат Неопределено;
	
КонецФункции

Процедура ОтправитьВопрос(Отправитель, Вопрос)
	
	СвойстваВопроса = СвойстваВопроса(Вопрос);
	
	ДополнительныеСвойства = ИнтеграцияТелеграм.ДополнительныеСвойстваИсходящегоСообщения();
	ДополнительныеСвойства.Клавиатура = КлавиатураВыбораОтветов(СвойстваВопроса.КоличествоОтветов);
	
	ИнтеграцияТелеграм.ОтправитьСообщение(Отправитель, СвойстваВопроса.ТекстВопроса, ДополнительныеСвойства);
	
КонецПроцедуры

Функция СвойстваВопроса(Вопрос)
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	ВопросТестаСРасшифровкой.ТекстВопроса,
		|	ВопросТестаСРасшифровкой.КоличествоОтветов
		|ИЗ
		|	Справочник.ВопросыТестаСРасшифровкой КАК ВопросТестаСРасшифровкой
		|ГДЕ
		|	ВопросТестаСРасшифровкой.Ссылка = &Ссылка";
		
	Запрос.УстановитьПараметр("Ссылка", Вопрос);
	
	Выборка = Запрос.Выполнить().Выбрать();
	
	Выборка.Следующий();
	
	Результат = Новый Структура;
	Результат.Вставить("ТекстВопроса", Выборка.ТекстВопроса);
	Результат.Вставить("КоличествоОтветов", Выборка.КоличествоОтветов);
	
	Возврат Результат;
	
КонецФункции

Функция КлавиатураВыбораОтветов(КоличествоОтветов)
	
	СтрокиКлавиатуры = Новый Массив;
	СтрокаКлавиатуры = Новый Массив;
	
	Для ИндексОтвета = 0 По КоличествоОтветов - 1 Цикл
				
		Кнопка = Новый Структура;
		Кнопка.Вставить("text", Строка(ИндексОтвета + 1));
		
		СтрокаКлавиатуры.Добавить(Кнопка);
		
		Если ИндексОтвета >= 4 Тогда
			ИндексОтвета = 0;
			СтрокиКлавиатуры.Добавить(СтрокаКлавиатуры);
			СтрокаКлавиатуры = Новый Массив;
		КонецЕсли;
		
	КонецЦикла;
	
	Если СтрокаКлавиатуры.Количество() > 0 Тогда
		СтрокиКлавиатуры.Добавить(СтрокаКлавиатуры);
	КонецЕсли;		
	
	Клавиатура = Новый Структура;
	Клавиатура.Вставить("keyboard", СтрокиКлавиатуры);
	Клавиатура.Вставить("resize_keyboard", Истина);
	
	Возврат Клавиатура;
	
КонецФункции

Функция СтатусОтправителя(Отправитель)
	
	Результат = Новый Структура;
	Результат.Вставить("Статус", Перечисления.СтатусыТестаСРасшифровкой.ПустаяСсылка());
	Результат.Вставить("НомерВопроса", 0);
	Результат.Вставить("Прохождение", Документы.ПрохождениеТестаСРасшифровкой.ПустаяСсылка());
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	СтатусыТестаСРасшифровкой.Статус,
		|	СтатусыТестаСРасшифровкой.НомерВопроса,
		|	СтатусыТестаСРасшифровкой.Прохождение
		|ИЗ
		|	РегистрСведений.СтатусыТестаСРасшифровкой КАК СтатусыТестаСРасшифровкой
		|ГДЕ
		|	СтатусыТестаСРасшифровкой.УчетнаяЗапись = &УчетнаяЗапись";
		
	Запрос.УстановитьПараметр("УчетнаяЗапись", Отправитель);
	
	Выборка = Запрос.Выполнить().Выбрать();
	
	Если Выборка.Следующий() Тогда
		ЗаполнитьЗначенияСвойств(Результат, Выборка);
	КонецЕсли;
	
	Возврат Результат;
	
КонецФункции

Функция КлавиатураОднаКнопка(Заголовок)
	
	СтрокиКлавиатуры = Новый Массив;
	СтрокаКлавиатуры = Новый Массив;
	
	Кнопка = Новый Структура;
	Кнопка.Вставить("text", Заголовок);
	
	СтрокаКлавиатуры.Добавить(Кнопка);	
	СтрокиКлавиатуры.Добавить(СтрокаКлавиатуры);

	Клавиатура = Новый Структура;
	Клавиатура.Вставить("keyboard", СтрокиКлавиатуры);
	Клавиатура.Вставить("resize_keyboard", Истина);	
	
	Возврат Клавиатура;
	
КонецФункции

Функция КомандаНачатьТест()
	Возврат НСтр("ru = 'Начать тест'");
КонецФункции

Процедура УстановитьСтатус(Отправитель, Статус, НомерВопроса = Неопределено, Прохождение = Неопределено)
	
	Запись = РегистрыСведений.СтатусыТестаСРасшифровкой.СоздатьМенеджерЗаписи();
	Запись.УчетнаяЗапись = Отправитель;
	Запись.Статус = Статус;
	Запись.НомерВопроса = НомерВопроса;
	Запись.Прохождение = Прохождение;
	Запись.Записать();
	
КонецПроцедуры

#КонецОбласти
